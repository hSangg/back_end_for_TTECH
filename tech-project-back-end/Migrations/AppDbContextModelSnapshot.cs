// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tech_project_back_end.Data;

#nullable disable

namespace tech_project_back_end.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("tech_project_back_end.Models.AuditLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("tech_project_back_end.Models.Cart", b =>
                {
                    b.Property<string>("user_id")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.Property<string>("product_id")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("product_id");

                    b.Property<int>("quantity")
                        .HasColumnType("int(11)")
                        .HasColumnName("quantity");

                    b.HasKey("user_id", "product_id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("tech_project_back_end.Models.Category", b =>
                {
                    b.Property<string>("category_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("category_id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("tech_project_back_end.Models.DetailOrder", b =>
                {
                    b.Property<string>("order_id")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("order_id");

                    b.Property<string>("product_id")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("product_id");

                    b.Property<ulong>("price")
                        .HasColumnType("bigint(20) UNSIGNED")
                        .HasColumnName("price");

                    b.Property<int>("quality")
                        .HasColumnType("int(11)")
                        .HasColumnName("quality");

                    b.HasKey("order_id", "product_id");

                    b.ToTable("DetailOrder");
                });

            modelBuilder.Entity("tech_project_back_end.Models.Discount", b =>
                {
                    b.Property<string>("DiscountId")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("discount_id");

                    b.Property<int>("DiscountAmount")
                        .HasColumnType("int(11)")
                        .HasColumnName("discount_amount");

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("discount_code");

                    b.Property<DateTime?>("DiscountDateFrom")
                        .HasColumnType("date")
                        .HasColumnName("discount_date_from");

                    b.Property<DateTime>("DiscountDateTo")
                        .HasColumnType("datetime")
                        .HasColumnName("discount_date_to");

                    b.HasKey("DiscountId");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("tech_project_back_end.Models.Image", b =>
                {
                    b.Property<string>("image_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("file_name")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("file_name");

                    b.Property<string>("image_href")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("image_href");

                    b.Property<string>("product_id")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("image_id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("tech_project_back_end.Models.Order", b =>
                {
                    b.Property<string>("order_id")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("order_id");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("address");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime")
                        .HasColumnName("create_order_at");

                    b.Property<int>("delivery_fee")
                        .HasColumnType("int")
                        .HasColumnName("delivery_fee");

                    b.Property<string>("discount")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("discount");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("note");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("state");

                    b.Property<long>("total")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("total");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.HasKey("order_id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("tech_project_back_end.Models.Product", b =>
                {
                    b.Property<string>("product_id")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("product_id");

                    b.Property<string>("detail")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("detail");

                    b.Property<int>("guarantee_period")
                        .HasColumnType("int(11)")
                        .HasColumnName("guarantee_period");

                    b.Property<string>("name_pr")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name_pr");

                    b.Property<string>("name_serial")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name_serial");

                    b.Property<int>("price")
                        .HasColumnType("int(11)")
                        .HasColumnName("price");

                    b.Property<int>("quantity_pr")
                        .HasColumnType("int(11)")
                        .HasColumnName("quantity_pr");

                    b.Property<string>("supplier_id")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("supplier_id");

                    b.HasKey("product_id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("tech_project_back_end.Models.ProductCategory", b =>
                {
                    b.Property<string>("product_id")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("product_id");

                    b.Property<string>("category_id")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("category_id");

                    b.HasKey("product_id", "category_id");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("tech_project_back_end.Models.Supplier", b =>
                {
                    b.Property<string>("supplier_id")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("supplier_id");

                    b.Property<string>("supplier_name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("supplier_name");

                    b.HasKey("supplier_id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("tech_project_back_end.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
